@model WebApplication2.Models.Users

<div class="container py-4">
    <div id="message"></div>

    <div class="row">
        <div class="col-lg-4 mb-4">
            <div class="card shadow border-0 rounded-3">
                <div class="card-body text-center p-4">
                    <div class="position-relative mb-4">
                        <div class="profile-picture-container mx-auto">
                            @if (!string.IsNullOrEmpty(Model.ProfileImage))
                            {
                                <img id="profileImage" src="@Url.Content(Model.ProfileImage)" alt="Profile Picture"
                                     class="rounded-circle img-thumbnail shadow"
                                     style="width: 150px; height: 150px; object-fit: cover; cursor: pointer;" />
                            }
                            else
                            {
                                <img id="profileImage" src="~/images/default-profile.png" alt="Profile Picture"
                                     class="rounded-circle img-thumbnail shadow"
                                     style="width: 150px; height: 150px; object-fit: cover; cursor: pointer;" />
                            }
                            <div class="profile-picture-overlay rounded-circle">
                                <button class="btn-circle btn-light me-1" id="viewProfilePic">
                                    <i class="fas fa-eye"></i>
                                </button>
                                <label for="profileImageUpload" class="btn-circle btn-primary mb-0">
                                    <i class="fas fa-upload"></i>
                                </label>
                                <input type="file" id="profileImageUpload" name="ProfileImageFile"
                                       style="display: none;" accept="image/*" onchange="uploadProfileImage(this)" />
                            </div>
                        </div>
                    </div>
                    <h4 class="mb-1 fw-bold" id="sidebarFullName">@Model.FullName</h4>
                    <p class="text-muted">@Model.Email</p>

                    <div class="d-grid gap-2 mt-4">
                        <button class="btn-custom nav-button active" id="myProfileLink" data-target="profileSection">
                            <i class="fas fa-user me-2"></i> Personal Profile
                        </button>
                        <button class="btn-custom nav-button btn-outline" id="changePasswordLink" data-target="passwordSection">
                            <i class="fas fa-key me-2"></i> Change Password
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-8">
            <div class="card shadow border-0 rounded-3 mb-4 content-section" id="profileSection">
                <div class="card-header bg-white py-3 border-bottom">
                    <h5 class="mb-0 fw-bold">
                        <i class="fas fa-user-edit me-2" style="color: #ff8c00;"></i>
                        Personal Information
                    </h5>
                </div>
                <div class="card-body p-4">
                    <form asp-action="Profile" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="row">
                            <div class="col-12">
                                <div class="form-group mb-3">
                                    <label asp-for="FullName" class="form-label">Full Name</label>
                                    <div class="input-pill-container">
                                        <input asp-for="FullName" class="form-control-pill" />
                                    </div>
                                    <span asp-validation-for="FullName" class="text-danger"></span>
                                </div>
                                <div class="form-group mb-3">
                                    <label asp-for="Email" class="form-label">Email</label>
                                    <div class="input-pill-container">
                                        <input asp-for="Email" class="form-control-pill bg-light" readonly />
                                    </div>
                                    <small class="text-muted">Email Address Cannot Be Changed</small>
                                </div>
                                <div class="text-end mt-4">
                                    <button type="submit" class="btn-custom">
                                        <i class="fas fa-save me-2"></i> Update Profile
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            <div class="card shadow border-0 rounded-3 content-section" id="passwordSection" style="display: none;">
                <div class="card-header bg-white py-3 border-bottom">
                    <h5 class="mb-0 fw-bold">
                        <i class="fas fa-shield-alt me-2" style="color: #ff8c00;"></i>
                        Change Password
                    </h5>
                </div>
                <div class="card-body p-4">
                    <form id="changePasswordForm">
                        <div class="mb-3">
                            <label for="currentPassword" class="form-label">Current Password</label>
                            <div class="input-pill-container">
                                <input type="password" class="form-control-pill" id="currentPassword" required>
                                <button class="btn-toggle-password toggle-password" type="button" data-target="currentPassword">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="newPassword" class="form-label">New Password</label>
                            <div class="input-pill-container">
                                <input type="password" class="form-control-pill" id="newPassword" required>
                                <button class="btn-toggle-password toggle-password" type="button" data-target="newPassword">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="confirmPassword" class="form-label">Confirm Password</label>
                            <div class="input-pill-container">
                                <input type="password" class="form-control-pill" id="confirmPassword" required>
                                <button class="btn-toggle-password toggle-password" type="button" data-target="confirmPassword">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                        </div>
                        <div class="text-end mt-4">
                            <button type="button" class="btn-custom" onclick="changePassword()">
                                <i class="fas fa-key me-2"></i> Update Password
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="profilePictureModal" tabindex="-1" aria-labelledby="profilePictureModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header py-2">
                <h5 class="modal-title" id="profilePictureModalLabel">Avatar</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center p-0">
                <img id="modalProfileImage" src="" alt="Profile Picture" class="img-fluid" />
            </div>
        </div>
    </div>
</div>

<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 1050">
    <div id="liveToast" class="toast hide" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header py-2">
            <i class="fas fa-bell me-2"></i>
            <strong class="me-auto">Thông báo</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body" id="toastMessage">
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                     showToast("@TempData["SuccessMessage"]", "success");
            </text>
        }

        @if (ViewBag.Message != null)
        {
            <text>
                    showToast("@ViewBag.Message", "success");
            </text>
        }

            $("#myProfileLink").addClass("active");
            $("#profileSection").show();

            $(".nav-button").click(function(e) {
                e.preventDefault();

                $(".nav-button").removeClass("active").addClass("btn-outline");
                $(this).removeClass("btn-outline").addClass("active");

                $(".content-section").hide();

                const targetSection = $(this).data("target");
                $("#" + targetSection).fadeIn(300);
            });

            $(".profile-picture-container").hover(
                function() { $(this).find(".profile-picture-overlay").fadeIn(200); },
                function() { $(this).find(".profile-picture-overlay").fadeOut(200); }
            );

            $("#viewProfilePic").click(function(e) {
                e.preventDefault();
                $("#modalProfileImage").attr("src", $("#profileImage").attr("src"));
                var profileModal = new bootstrap.Modal(document.getElementById('profilePictureModal'));
                profileModal.show();
            });

            $(".toggle-password").click(function() {
                const targetId = $(this).data("target");
                const passwordInput = document.getElementById(targetId);
                const icon = $(this).find("i");

                if (passwordInput.type === "password") {
                    passwordInput.type = "text";
                    icon.removeClass("fa-eye").addClass("fa-eye-slash");
                } else {
                    passwordInput.type = "password";
                    icon.removeClass("fa-eye-slash").addClass("fa-eye");
                }
            });
        });

        function uploadProfileImage(input) {
            if (input.files && input.files[0]) {
                const formData = new FormData();
                formData.append('ProfileImageFile', input.files[0]);

                fetch('/Profile/UploadProfileImage', {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const imagePath = data.imagePath.replace('~', '');
                        $("#profileImage").attr("src", imagePath);
                        $("#sidebarFullName").text(data.fullName);
                        showToast(data.message, "success");
                    } else {
                        showToast(data.message, "danger");
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showToast("An error occurred while uploading the image.", "danger");
                });
            }
        }

        function changePassword() {
            let currentPassword = document.getElementById("currentPassword").value;
            let newPassword = document.getElementById("newPassword").value;
            let confirmPassword = document.getElementById("confirmPassword").value;

            if (newPassword !== confirmPassword) {
                showToast("New password does not match confirmation!", "danger");
                return;
            }

            fetch('/Profile/ChangePassword', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    CurrentPassword: currentPassword,
                    NewPassword: newPassword
                })
            })
            .then(response => response.json())
            .then(data => {
                showToast(data.message, data.success ? "success" : "danger");
                if (data.success) {
                    document.getElementById("changePasswordForm").reset();
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showToast("An error occurred while changing password.", "danger");
            });
        }

        function showToast(message, type) {
            const toastElement = document.getElementById('liveToast');
            const toast = new bootstrap.Toast(toastElement, { delay: 5000 });

            document.getElementById('toastMessage').innerText = message;
            toastElement.className = `toast hide bg-${type === 'success' ? 'success text-white' : 'danger text-white'}`;

            toast.show();
        }
    </script>

    <style>
        .btn-custom {
            background-color: #FF8C00;
            color: white;
            font-weight: 500;
            border: none;
            border-radius: 50px;
            padding: 10px 20px;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            text-align: center;
            font-size: 16px;
            display: inline-block;
        }

            .btn-custom:hover {
                background-color: #FF7000;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
                transform: translateY(-1px);
            }

            .btn-custom:active {
                transform: translateY(1px);
            }

            .btn-custom.active {
                background-color: #FF8C00;
                color: white;
            }

            .btn-custom.btn-outline {
                background-color: white;
                color: #FF8C00;
                border: 2px solid #FF8C00;
            }

                .btn-custom.btn-outline:hover {
                    background-color: rgba(255, 140, 0, 0.1);
                }

        .input-pill-container {
            position: relative;
            display: flex;
            align-items: center;
        }

        .form-control-pill {
            width: 100%;
            padding: 12px 18px;
            font-size: 16px;
            border: 1px solid #ddd;
            border-radius: 50px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease;
            outline: none;
        }

            .form-control-pill:focus {
                border-color: #FF8C00;
                box-shadow: 0 0 0 3px rgba(255, 140, 0, 0.15);
            }

            .form-control-pill.bg-light {
                background-color: #f8f9fa;
            }

        .btn-toggle-password {
            position: absolute;
            right: 15px;
            background: transparent;
            border: none;
            color: #6c757d;
            cursor: pointer;
            transition: color 0.2s ease;
            outline: none;
        }

            .btn-toggle-password:hover {
                color: #495057;
            }

        .btn-circle {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            border: none;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .btn-light {
            background-color: white;
            color: #444;
        }

        .btn-primary {
            background-color: #FF8C00;
            color: white;
        }

        .btn-circle:hover {
            transform: scale(1.1);
        }

        .profile-picture-container {
            position: relative;
            width: 150px;
            height: 150px;
            margin: 0 auto;
        }

        .profile-picture-overlay {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            background-color: rgba(0, 0, 0, 0.5);
            padding: 8px;
            display: none;
            border-bottom-left-radius: 50%;
            border-bottom-right-radius: 50%;
        }

        .card {
            transition: all 0.3s ease;
            border: none;
        }

        button[type="submit"], button[onclick="changePassword()"] {
            min-width: 160px;
        }
    </style>
}