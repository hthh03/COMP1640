@model IEnumerable<WebApplication2.Models.Post>

@{
    ViewData["Title"] = "Danh sách bài đăng";
}

<!-- Font Awesome -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

<style>
    /* Main color variables */
    :root {
        --primary-orange: #FF7F24;
        --secondary-orange: #FFA07A;
        --light-orange: #FFE4C4;
        --dark-orange: #D2691E;
        --text-dark: #333333;
        --text-light: #ffffff;
        --light-gray: #f5f5f5;
        --accent-color: #45B8AC;
        --table-hover: rgba(255, 127, 36, 0.08);
        --table-stripe: rgba(255, 224, 196, 0.3);
        --shadow-sm: 0 2px 6px rgba(0,0,0,0.1);
        --shadow-md: 0 5px 15px rgba(210, 105, 30, 0.15);
        --gradient-bg: linear-gradient(135deg, var(--light-orange) 0%, #ffffff 100%);
    }

    body {
        background-color: var(--light-gray);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        margin: 0;
        padding: 0;
    }

    .page-container {
        max-width: 1200px;
        margin: 30px auto;
        padding: 0 20px;
    }

    .header-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px;
        position: relative;
    }

    .page-title {
        font-size: 2.2rem;
        color: var(--dark-orange);
        font-weight: 700;
        position: relative;
        display: inline-flex;
        align-items: center;
        margin: 0;
    }

        .page-title i {
            margin-right: 15px;
            color: var(--primary-orange);
            font-size: 1.8rem;
        }

        .page-title::after {
            content: '';
            position: absolute;
            bottom: -8px;
            left: 0;
            width: 60px;
            height: 3px;
            background-color: var(--primary-orange);
            border-radius: 3px;
            transition: width 0.3s ease;
        }

        .page-title:hover::after {
            width: 100px;
        }

    .create-btn {
        padding: 12px 24px;
        background-color: var(--primary-orange);
        color: var(--text-light);
        border-radius: 30px;
        text-decoration: none;
        font-weight: 600;
        transition: all 0.3s ease;
        box-shadow: var(--shadow-sm);
        display: inline-flex;
        align-items: center;
    }

        .create-btn i {
            margin-right: 8px;
            transition: transform 0.3s ease;
        }

        .create-btn:hover {
            background-color: var(--dark-orange);
            transform: translateY(-3px);
            box-shadow: var(--shadow-md);
        }

            .create-btn:hover i {
                transform: rotate(90deg);
            }

    .card-container {
        background-color: white;
        border-radius: 16px;
        box-shadow: var(--shadow-md);
        overflow: hidden;
        border-top: 5px solid var(--primary-orange);
        position: relative;
    }

        .card-container::before {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            width: 150px;
            height: 150px;
            background: var(--light-orange);
            opacity: 0.3;
            border-radius: 0 0 0 100%;
            z-index: 0;
        }

    .posts-table {
        width: 100%;
        border-collapse: collapse;
        border-spacing: 0;
        background-color: white;
    }

        .posts-table thead {
            background-color: rgba(255, 224, 196, 0.7);
        }

        .posts-table th {
            padding: 15px 20px;
            font-weight: 600;
            color: var(--dark-orange);
            text-align: left;
            font-size: 1rem;
            position: relative;
            cursor: pointer;
            transition: all 0.3s ease;
            white-space: nowrap;
        }

            .posts-table th i.fa-sort {
                margin-left: 5px;
                font-size: 0.9rem;
                opacity: 0.7;
            }

            .posts-table th i:first-child {
                margin-right: 5px;
                opacity: 0.9;
            }

            .posts-table th:hover {
                background-color: rgba(255, 224, 196, 0.9);
            }

        .posts-table td {
            padding: 15px 20px;
            vertical-align: middle;
            border-top: 1px solid #eee;
            color: var(--text-dark);
            transition: all 0.2s ease;
        }

        .posts-table tbody tr {
            transition: all 0.3s ease;
        }

            .posts-table tbody tr:nth-child(even) {
                background-color: var(--table-stripe);
            }

            .posts-table tbody tr:hover {
                background-color: var(--table-hover);
                transform: translateY(-2px);
                box-shadow: 0 3px 10px rgba(0,0,0,0.05);
            }

    /* Title column styling */
    .title-cell {
        font-weight: 600;
        color: var(--dark-orange);
        max-width: 250px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

        .title-cell i {
            margin-right: 8px;
            color: var(--primary-orange);
            transition: transform 0.3s ease;
        }

    .posts-table tbody tr:hover .title-cell i {
        transform: rotate(15deg);
    }

    /* Content cell styling */
    .content-cell {
        max-width: 300px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        font-size: 0.95rem;
        color: #555;
    }

    /* Date styling */
    .date-cell {
        font-size: 0.9rem;
        display: flex;
        align-items: center;
        white-space: nowrap;
    }

        .date-cell i {
            margin-right: 8px;
            color: var(--secondary-orange);
            font-size: 0.9rem;
        }

    /* Status indicator */
    .status-indicator {
        display: inline-flex;
        align-items: center;
        padding: 4px 10px;
        border-radius: 12px;
        font-size: 0.85rem;
        font-weight: 600;
        margin-left: 5px;
    }

    .status-updated {
        background-color: #E3F2FD;
        color: #1976D2;
    }

    .status-new {
        background-color: #E8F5E9;
        color: #388E3C;
    }

    /* Badge styling */
    .blog-badge {
        background-color: var(--light-orange);
        color: var(--dark-orange);
        padding: 5px 10px;
        border-radius: 12px;
        font-size: 0.85rem;
        display: inline-flex;
        align-items: center;
        transition: all 0.3s ease;
        font-weight: 600;
    }

        .blog-badge i {
            margin-right: 5px;
            font-size: 0.8rem;
        }

        .blog-badge:hover {
            background-color: var(--secondary-orange);
            color: white;
            transform: translateY(-2px);
        }

    /* Date group styling */
    .date-group {
        display: flex;
        flex-direction: column;
        gap: 5px;
    }

    .date-primary {
        font-weight: 600;
    }

    .date-secondary {
        font-size: 0.8rem;
        color: #777;
    }

    /* Actions styling */
    .actions-cell {
        display: flex;
        gap: 10px;
        justify-content: flex-end;
        white-space: nowrap;
    }

    .action-btn {
        padding: 8px 12px;
        border-radius: 8px;
        text-decoration: none;
        font-weight: 600;
        font-size: 0.9rem;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
    }

        .action-btn i {
            margin-right: 5px;
        }

    .edit-btn {
        background-color: var(--accent-color);
        color: white;
    }

        .edit-btn:hover {
            background-color: #3AA99E;
            transform: translateY(-2px);
            box-shadow: 0 3px 8px rgba(69, 184, 172, 0.3);
        }

    .details-btn {
        background-color: var(--light-orange);
        color: var(--dark-orange);
    }

        .details-btn:hover {
            background-color: var(--secondary-orange);
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 3px 8px rgba(255, 160, 122, 0.3);
        }

    .delete-btn {
        background-color: #ff6b6b;
        color: white;
    }

        .delete-btn:hover {
            background-color: #ff5252;
            transform: translateY(-2px);
            box-shadow: 0 3px 8px rgba(255, 107, 107, 0.3);
        }

    /* Stats bar */
    .stats-bar {
        display: flex;
        flex-wrap: wrap;
        gap: 15px;
        margin-bottom: 20px;
        justify-content: space-between;
    }

    .stat-card {
        background-color: white;
        padding: 15px 20px;
        border-radius: 12px;
        box-shadow: var(--shadow-sm);
        display: flex;
        align-items: center;
        flex: 1;
        min-width: 180px;
        transition: all 0.3s ease;
        border-left: 4px solid var(--primary-orange);
    }

        .stat-card:hover {
            transform: translateY(-3px);
            box-shadow: var(--shadow-md);
        }

    .stat-icon {
        width: 45px;
        height: 45px;
        background-color: var(--light-orange);
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 15px;
        font-size: 1.3rem;
        color: var(--primary-orange);
    }

    .stat-content {
        display: flex;
        flex-direction: column;
    }

    .stat-value {
        font-size: 1.5rem;
        font-weight: 700;
        color: var(--dark-orange);
    }

    .stat-label {
        font-size: 0.9rem;
        color: #777;
    }

    /* Search bar */
    .search-container {
        margin-bottom: 20px;
        display: flex;
        gap: 10px;
    }

    .search-input {
        flex: 1;
        padding: 12px 15px;
        border-radius: 30px;
        border: 1px solid #ddd;
        font-size: 1rem;
        transition: all 0.3s ease;
        box-shadow: var(--shadow-sm);
        padding-left: 40px;
        position: relative;
    }

    .search-box {
        position: relative;
        flex: 1;
    }

        .search-box i {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #aaa;
            z-index: 1;
        }

    .search-input:focus {
        outline: none;
        border-color: var(--secondary-orange);
        box-shadow: 0 0 0 3px rgba(255, 160, 122, 0.2);
    }

    .filter-btn {
        padding: 0 20px;
        border-radius: 30px;
        background-color: var(--light-gray);
        border: 1px solid #ddd;
        cursor: pointer;
        display: flex;
        align-items: center;
        transition: all 0.3s ease;
    }

        .filter-btn:hover {
            background-color: var(--light-orange);
        }

    /* Empty state */
    .empty-state {
        padding: 40px 20px;
        text-align: center;
        color: #777;
    }

    .empty-icon {
        font-size: 3rem;
        color: var(--light-orange);
        margin-bottom: 15px;
    }

    .empty-message {
        font-size: 1.2rem;
        margin-bottom: 20px;
    }

    /* Pagination */
    .pagination {
        display: flex;
        justify-content: center;
        gap: 8px;
        margin-top: 25px;
    }

    .page-item {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        background-color: white;
        color: var(--text-dark);
        font-weight: 600;
        box-shadow: var(--shadow-sm);
        transition: all 0.3s ease;
        text-decoration: none;
    }

        .page-item.active {
            background-color: var(--primary-orange);
            color: white;
        }

        .page-item:hover {
            background-color: var(--light-orange);
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

    /* Responsive styles */
    @@media (max-width: 992px) {
        .posts-table th, .posts-table td

    {
        padding: 12px;
    }

    .stats-bar {
        flex-wrap: wrap;
    }

    .stat-card {
        min-width: 150px;
    }

    }

    @@media (max-width: 768px) {
        .header-container

    {
        flex-direction: column;
        align-items: flex-start;
        gap: 15px;
    }

    .page-title {
        font-size: 1.8rem;
    }

    .content-cell, .date-cell, .blog-badge {
        max-width: 150px;
    }

    .actions-cell {
        flex-direction: column;
        gap: 5px;
    }

    .action-btn {
        padding: 6px 10px;
        font-size: 0.85rem;
    }

    }

    @@media (max-width: 576px) {
        .page-container

    {
        margin: 20px auto;
        padding: 0 15px;
    }

    .card-container {
        border-radius: 12px;
    }

    .page-title {
        font-size: 1.6rem;
    }

    .posts-table {
        display: block;
        overflow-x: auto;
    }

        .posts-table th, .posts-table td {
            padding: 10px;
            font-size: 0.9rem;
        }

    .stat-card {
        min-width: 100%;
    }

    .action-btn {
        width: 100%;
        justify-content: center;
    }

    }
</style>

<div class="page-container">
    <div class="header-container">
        <h1 class="page-title">
            <i class="fas fa-clipboard-list"></i>
            Danh sách bài đăng
        </h1>
        <a asp-action="Create" class="create-btn">
            <i class="fas fa-plus"></i>
            Tạo bài đăng mới
        </a>
    </div>

    <div class="stats-bar">
        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-file-alt"></i>
            </div>
            <div class="stat-content">
                <div class="stat-value">@Model.Count()</div>
                <div class="stat-label">Tổng bài đăng</div>
            </div>
        </div>

        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-calendar-check"></i>
            </div>
            <div class="stat-content">
                <div class="stat-value">@Model.Count(p => p.CreatedAt.Month == DateTime.Now.Month)</div>
                <div class="stat-label">Bài đăng tháng này</div>
            </div>
        </div>

        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-edit"></i>
            </div>
            <div class="stat-content">
                <div class="stat-value">@Model.Count(p => p.UpdatedAt != null)</div>
                <div class="stat-label">Bài đăng đã cập nhật</div>
            </div>
        </div>

        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-eye"></i>
            </div>
            <div class="stat-content">
                <div class="stat-value">1,234</div>
                <div class="stat-label">Lượt xem</div>
            </div>
        </div>
    </div>

    <div class="search-container">
        <div class="search-box">
            <i class="fas fa-search"></i>
            <input type="text" id="searchInput" class="search-input" placeholder="Tìm kiếm bài đăng...">
        </div>
        <button class="filter-btn" id="filterBtn">
            <i class="fas fa-filter"></i>
        </button>
    </div>

    <div class="card-container">
        @if (Model.Any())
        {
            <table class="posts-table">
                <thead>
                    <tr>
                        <th>
                            <i class="fas fa-heading"></i>
                            @Html.DisplayNameFor(model => model.Title)
                            <i class="fas fa-sort"></i>
                        </th>
                        <th>
                            <i class="fas fa-align-left"></i>
                            @Html.DisplayNameFor(model => model.Content)
                        </th>
                        <th>
                            <i class="fas fa-calendar-alt"></i>
                            Thời gian
                            <i class="fas fa-sort"></i>
                        </th>
                        <th>
                            <i class="fas fa-bookmark"></i>
                            @Html.DisplayNameFor(model => model.BlogId)
                        </th>
                        <th>
                            <i class="fas fa-cogs"></i>
                            Thao tác
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td class="title-cell">
                                <i class="fas fa-file-alt"></i>
                                @Html.DisplayFor(modelItem => item.Title)
                            </td>
                            <td class="content-cell">
                                @if (item.Content?.Length > 100)
                                {
                                    @(item.Content.Substring(0, 100) + "...")
                                }
                                else
                                {
                                    @Html.DisplayFor(modelItem => item.Content)
                                }
                            </td>
                            <td>
                                <div class="date-group">
                                    <div class="date-primary">
                                        <i class="fas fa-calendar-plus"></i>
                                        @item.CreatedAt.ToString("dd/MM/yyyy")
                                    </div>
                                    @if (item.UpdatedAt != null)
                                    {
                                        <div class="date-secondary">
                                            <i class="fas fa-sync-alt"></i>
                                            Cập nhật: @item.UpdatedAt?.ToString("dd/MM/yyyy HH:mm")
                                            @if (item.UpdatedAt?.Date == DateTime.Now.Date)
                                            {
                                                <span class="status-indicator status-updated">
                                                    <i class="fas fa-clock"></i> Hôm nay
                                                </span>
                                            }
                                        </div>
                                    }
                                    else if (item.CreatedAt.Date == DateTime.Now.Date)
                                    {
                                        <div class="date-secondary">
                                            <span class="status-indicator status-new">
                                                <i class="fas fa-star"></i> Mới
                                            </span>
                                        </div>
                                    }
                                </div>
                            </td>
                            <td>
                                <div class="blog-badge">
                                    <i class="fas fa-folder"></i>
                                    @Html.DisplayFor(modelItem => item.BlogId)
                                </div>
                            </td>
                            <td class="actions-cell">
                                <a asp-action="Edit" asp-route-id="@item.PostId" class="action-btn edit-btn">
                                    <i class="fas fa-edit"></i>
                                    Sửa
                                </a>
                                <a asp-action="Details" asp-route-id="@item.PostId" class="action-btn details-btn">
                                    <i class="fas fa-info-circle"></i>
                                    Chi tiết
                                </a>
                                <a asp-action="Delete" asp-route-id="@item.PostId" class="action-btn delete-btn">
                                    <i class="fas fa-trash-alt"></i>
                                    Xóa
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="empty-state">
                <div class="empty-icon">
                    <i class="fas fa-inbox"></i>
                </div>
                <div class="empty-message">Không có bài đăng nào</div>
                <a asp-action="Create" class="create-btn">
                    <i class="fas fa-plus"></i>
                    Tạo bài đăng đầu tiên
                </a>
            </div>
        }
    </div>

    <div class="pagination">
        <a href="#" class="page-item">
            <i class="fas fa-chevron-left"></i>
        </a>
        <a href="#" class="page-item active">1</a>
        <a href="#" class="page-item">2</a>
        <a href="#" class="page-item">3</a>
        <a href="#" class="page-item">
            <i class="fas fa-chevron-right"></i>
        </a>
    </div>
</div>

<script>
    // Simple search functionality
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('searchInput');
        const tableRows = document.querySelectorAll('.posts-table tbody tr');

        searchInput.addEventListener('keyup', function() {
            const searchTerm = searchInput.value.toLowerCase();

            tableRows.forEach(row => {
                const titleCell = row.querySelector('.title-cell').textContent.toLowerCase();
                const contentCell = row.querySelector('.content-cell').textContent.toLowerCase();

                if (titleCell.includes(searchTerm) || contentCell.includes(searchTerm)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        });
    });
</script>