@model Assignment

@{
    ViewData["Title"] = "Create Assignment";
}
<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-header bg-white">
                    <h3 style="color: #ff7846;">
                        <i class="fa fa-clipboard-list" style="color: #ff7846;"></i> Create Assignment
                    </h3>
                </div>
                <div class="card-body">
                    <form asp-action="Create" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="mb-3">
                            <label class="form-label" style="color: #ff7846;">Assignment Title</label>
                            <div class="input-group">
                                <span class="input-group-text" style="color: #ff7846;">T</span>
                                <input asp-for="Title" class="form-control" placeholder="Enter assignment title" />
                            </div>
                            <div class="d-flex justify-content-between">
                                <span asp-validation-for="Title" class="text-danger"></span>
                                <small class="text-muted">0/100</small>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label" style="color: #ff7846;">Assignment Description</label>
                            <div class="input-group">
                                <span class="input-group-text" style="color: #ff7846;">≡</span>
                                <textarea asp-for="Description" class="form-control" rows="5" placeholder="Write your assignment description here..."></textarea>
                            </div>
                            <div class="d-flex justify-content-between">
                                <span asp-validation-for="Description" class="text-danger"></span>
                                <small class="text-muted">0/1000</small>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label" style="color: #ff7846;">Due Date</label>
                            <div class="input-group">
                                <span class="input-group-text" style="color: #ff7846;"><i class="fa fa-calendar"></i></span>
                                <input asp-for="DueDate" type="datetime-local" class="form-control" />
                            </div>
                            <span asp-validation-for="DueDate" class="text-danger"></span>
                        </div>
                        <!-- Hidden CourseId field -->
                        <input type="hidden" asp-for="CourseId" />
                        <div class="d-flex justify-content-between mt-4">
                            <a asp-action="Index" asp-route-courseId="@Model.CourseId" class="btn btn-outline-secondary">
                                <i class="fa-solid fa-arrow-left me-2"></i> Back to List
                            </a>
                            <button type="submit" class="btn text-white" style="background-color: #ff7846;">
                                <i class="fa-solid fa-plus me-2"></i> Create Assignment
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Character counter for title and description
        document.addEventListener('DOMContentLoaded', function () {
            const titleInput = document.querySelector('input[name="Title"]');
            const descInput = document.querySelector('textarea[name="Description"]');

            const titleCounter = titleInput.parentNode.nextElementSibling.querySelector('small');
            const descCounter = descInput.parentNode.nextElementSibling.querySelector('small');

            titleInput.addEventListener('input', function () {
                titleCounter.textContent = `${this.value.length}/100`;
            });

            descInput.addEventListener('input', function () {
                descCounter.textContent = `${this.value.length}/1000`;
            });
        });
    </script>
}