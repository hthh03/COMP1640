@model List<Message>
@{
    ViewData["Title"] = "Chat với " + ViewBag.ReceiverName;
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <h5>Chat với @ViewBag.ReceiverName</h5>
                    <a href="@Url.Action("Index", "Message")" class="btn btn-sm btn-light">
                        <i class="bi bi-arrow-left"></i> Quay lại
                    </a>
                </div>
                <div class="card-body" id="messageContainer" style="height: 400px; overflow-y: auto;">
                    @foreach (var message in Model)
                    {
                        string messageAlign = message.SenderId == ViewBag.CurrentUserId ? "text-right" : "text-left";
                        string messageClass = message.SenderId == ViewBag.CurrentUserId ? "alert-primary" : "alert-secondary";

                        <div class="message @messageAlign" id="msg-@message.Id">
                            <div class="alert @messageClass p-2 d-inline-block">
                                @message.Content
                                <small class="d-block">@message.SentDate.ToString("HH:mm dd/MM/yyyy")</small>
                            </div>
                        </div>
                    }
                </div>
                <div class="card-footer">
                    <form id="messageForm" method="post" asp-action="SendMessage">
                        <input type="hidden" name="userId" value="@ViewBag.UserId" />
                        <div class="input-group">
                            <input type="text" class="form-control" name="content" id="messageContent" placeholder="Nhập tin nhắn..." autocomplete="off" required />
                            <div class="input-group-append">
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-send"></i> Gửi
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
    <script>
        // Kết nối đến SignalR Hub
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub") // Đảm bảo khớp với đường dẫn trong Program.cs
            .withAutomaticReconnect()
            .build();

        // Khởi tạo connection SignalR
        connection.start()
            .then(() => console.log("Kết nối SignalR thành công!"))
            .catch(err => console.error("Lỗi kết nối SignalR: " + err));

        // Lắng nghe sự kiện nhận tin nhắn mới
        connection.on("ReceiveMessage", (message, senderName, senderId) => {
            // Chỉ xử lý tin nhắn từ người đang chat
            if (senderId === "@ViewBag.UserId") {
                // Thêm tin nhắn vào giao diện
                const messageContainer = document.getElementById("messageContainer");
                const newMessage = document.createElement("div");
                newMessage.className = "message text-left";

                newMessage.innerHTML = `
                    <div class="alert alert-secondary p-2 d-inline-block">
                        ${message}
                        <small class="d-block">${new Date().toLocaleTimeString()} ${new Date().toLocaleDateString()}</small>
                    </div>
                `;

                messageContainer.appendChild(newMessage);

                // Cuộn xuống dưới cùng
                messageContainer.scrollTop = messageContainer.scrollHeight;

                // Phát âm thanh thông báo nếu có
                // const notification = new Audio('/sounds/notification.mp3');
                // notification.play();
            }
        });

        // Xử lý form gửi tin nhắn bằng Ajax
        document.getElementById("messageForm").addEventListener("submit", function(e) {
            e.preventDefault();

            const userId = "@ViewBag.UserId";
            const content = document.getElementById("messageContent").value;

            if (!content.trim()) return;

            // Gửi tin nhắn bằng Ajax
            fetch('@Url.Action("SendMessage")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: `userId=${userId}&content=${encodeURIComponent(content)}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Thêm tin nhắn vào giao diện
                    const messageContainer = document.getElementById("messageContainer");
                    const newMessage = document.createElement("div");
                    newMessage.className = "message text-right";

                    newMessage.innerHTML = `
                        <div class="alert alert-primary p-2 d-inline-block">
                            ${content}
                            <small class="d-block">${new Date().toLocaleTimeString()} ${new Date().toLocaleDateString()}</small>
                        </div>
                    `;

                    messageContainer.appendChild(newMessage);

                    // Xóa nội dung đã nhập
                    document.getElementById("messageContent").value = "";

                    // Cuộn xuống dưới cùng
                    messageContainer.scrollTop = messageContainer.scrollHeight;
                }
            });
        });

        // Cuộn xuống dưới cùng khi tải trang
        window.onload = function() {
            const messageContainer = document.getElementById("messageContainer");
            messageContainer.scrollTop = messageContainer.scrollHeight;
        };
    </script>
}